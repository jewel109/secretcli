name: Create Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the release (e.g., v1.0.0)'
        required: true
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    
    outputs:
      upload_url: ${{ steps.get_upload_url.outputs.upload_url }} 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: mahinops/github-manual-release@v2.0.2
        with:
          release-tag-number: ${{ github.event.inputs.tag }}
          user-email: ${{ secrets.USER_EMAIL }}
          user-name: ${{ vars.USER_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Upload URL
        id: get_upload_url
        run: |
          upload_url=$(gh release view ${{ github.event.inputs.tag }} --json uploadUrl -q ".uploadUrl")
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: create-release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build binary
        run: |
          set -ex
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o secretcli cmd/secretcli.go

      - name: Check Upload URL
        run: echo "UPLOAD_URL is ${{ needs.create-release.outputs.upload_url }}"

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./secretcli
          asset_name: secretcli-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
